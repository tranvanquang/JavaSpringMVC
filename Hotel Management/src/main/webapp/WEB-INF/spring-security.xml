<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
 
  <http auto-config="true">
    <intercept-url pattern="/admin**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
    <intercept-url pattern="/login" access="permitAll" />
    <form-login
        login-page="/login"
        login-processing-url="/j_spring_security_login"
        default-target-url="/home"
      authentication-failure-url="/login?error"
      username-parameter="username"
      password-parameter="password" />
    <logout logout-url="/j_spring_security_logout"
      logout-success-url="/logout" delete-cookies="JSESSIONID" />
  </http>
  <authentication-manager>
    <authentication-provider>
    <!--
      <user-service>
        <user name="admin" password="{noop}123456" authorities="ROLE_ADMIN" />
        <user name="user" password="{noop}123456" authorities="ROLE_USER" />
      </user-service>
    -->
    
      <jdbc-user-service data-source-ref="dataSource"
        users-by-username-query="select username,password, enabled from users where username=?"
        authorities-by-username-query="select users.username, role.name from users, role, users_roles 
            where username =? and users.id = users_roles.user and users_roles.role = role.id " />
		    
		    
	  </authentication-provider>
    
  </authentication-manager>
</beans:beans>